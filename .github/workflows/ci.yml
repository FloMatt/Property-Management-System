name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  IMAGE_TAG: ${{ github.event.pull_request.number && github.event.pull_request.number || github.sha }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn

      - name: Lint
        run: yarn lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        include:
          - appname: gateway
            image: ghcr.io/${{ github.repository }}/gateway
            dockerfile: services/gateway/Dockerfile
          - appname: api
            image: ghcr.io/${{ github.repository }}/api
            dockerfile: services/api/Dockerfile
          - appname: tenantapi
            image: ghcr.io/${{ github.repository }}/tenantapi
            dockerfile: services/tenantapi/Dockerfile
          - appname: authenticator
            image: ghcr.io/${{ github.repository }}/authenticator
            dockerfile: services/authenticator/Dockerfile
          - appname: pdfgenerator
            image: ghcr.io/${{ github.repository }}/pdfgenerator
            dockerfile: services/pdfgenerator/Dockerfile
          - appname: emailer
            image: ghcr.io/${{ github.repository }}/emailer
            dockerfile: services/emailer/Dockerfile
          - appname: resetservice
            image: ghcr.io/${{ github.repository }}/resetservice
            dockerfile: services/resetservice/Dockerfile
          - appname: landlord-frontend
            image: ghcr.io/${{ github.repository }}/landlord-frontend
            dockerfile: webapps/landlord/Dockerfile
          - appname: tenant-frontend
            image: ghcr.io/${{ github.repository }}/tenant-frontend
            dockerfile: webapps/tenant/Dockerfile

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}

      - name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: '${{ matrix.image }}:${{ env.IMAGE_TAG }}'
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Build commands
      run: |
       npm install -g pkg
       yarn workspaces focus @microrealestate/cli
       pkg cli/package.json --compress Brotli --output mre
       mv mre-linux mre
       mv mre-win.exe mre.exe

    - name: Copy files to remote server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        source: "base.env,docker-compose.microservices.base.yml,docker-compose.microservices.test.yml,mre"
        target: microrealestate
    
    - name: Start mre on remote server
      uses: appleboy/ssh-action@v1.0.3
      with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}     
          script: |
            docker stop $(docker ps -a -q)
            docker rm $(docker ps -a -q)
            docker rmi $(docker images -q)
            cd microrealestate
            MRE_VERSION=${{ env.IMAGE_TAG }} ./mre ci

  healthcheck:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Wait until landlord app is up
      uses: jtalk/url-health-check-action@v3
      with:
        url: ${{ secrets.LANDLORD_APP_URL }}
        follow-redirect: true
        max-attempts: 3 
        retry-delay: 5s 

  test:
    runs-on: ubuntu-latest
    needs: healthcheck

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run tests
        env:
          GATEWAY_URL: ${{ secrets.GATEWAY_URL }}
          LANDLORD_APP_URL: ${{ secrets.LANDLORD_APP_URL }}
        run: |
          yarn
          yarn run e2e:ci
