name: Continuous Integration (CI)

on:
  push:
    branches:
      - master
  # pull_request:
  #   branches:
  #     - master
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn

      - name: Lint
        run: yarn lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        include:
          - appname: gateway
            image: ghcr.io/${{ github.repository }}/gateway
            dockerfile: services/gateway/Dockerfile
          - appname: api
            image: ghcr.io/${{ github.repository }}/api
            dockerfile: services/api/Dockerfile
          - appname: tenantapi
            image: ghcr.io/${{ github.repository }}/tenantapi
            dockerfile: services/tenantapi/Dockerfile
          - appname: authenticator
            image: ghcr.io/${{ github.repository }}/authenticator
            dockerfile: services/authenticator/Dockerfile
          - appname: pdfgenerator
            image: ghcr.io/${{ github.repository }}/pdfgenerator
            dockerfile: services/pdfgenerator/Dockerfile
          - appname: emailer
            image: ghcr.io/${{ github.repository }}/emailer
            dockerfile: services/emailer/Dockerfile
          - appname: resetservice
            image: ghcr.io/${{ github.repository }}/resetservice
            dockerfile: services/resetservice/Dockerfile
          - appname: landlord-frontend
            image: ghcr.io/${{ github.repository }}/landlord-frontend
            dockerfile: webapps/landlord/Dockerfile
          - appname: tenant-frontend
            image: ghcr.io/${{ github.repository }}/tenant-frontend
            dockerfile: webapps/tenant/Dockerfile

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}

      - name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: '${{ matrix.image }}:${{ github.sha }}'
          labels: ${{ steps.meta.outputs.labels }}

  deploy_backend:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Push gateway to dokku
        uses: dokku/github-action@master
        with:
          git_remote_url: '${{ secrets.DOKKU_URL}}/gateway-stage'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          deploy_docker_image: ghcr.io/${{ github.repository }}/gateway:${{ github.sha }}

      - name: Push authenticator to dokku
        uses: dokku/github-action@master
        with:
          git_remote_url: '${{ secrets.DOKKU_URL}}/authenticator-stage'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          deploy_docker_image: ghcr.io/${{ github.repository }}/authenticator:${{ github.sha }}

      - name: Push api to dokku
        uses: dokku/github-action@master
        with:
          git_remote_url: '${{ secrets.DOKKU_URL}}/api-stage'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          deploy_docker_image: ghcr.io/${{ github.repository }}/api:${{ github.sha }}

      - name: Push pdfgenerator to dokku
        uses: dokku/github-action@master
        with:
          git_remote_url: '${{ secrets.DOKKU_URL}}/pdfgenerator-stage'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          deploy_docker_image: ghcr.io/${{ github.repository }}/pdfgenerator:${{ github.sha }}

      - name: Push emailer to dokku
        uses: dokku/github-action@master
        with:
          git_remote_url: '${{ secrets.DOKKU_URL}}/emailer-stage'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          deploy_docker_image: ghcr.io/${{ github.repository }}/emailer:${{ github.sha }}

      - name: Push resetservice to dokku
        uses: dokku/github-action@master
        with:
          git_remote_url: '${{ secrets.DOKKU_URL}}/resetservice-stage'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          deploy_docker_image: ghcr.io/${{ github.repository }}/resetservice:${{ github.sha }}

      - name: Push tenantapi to dokku
        uses: dokku/github-action@master
        with:
          git_remote_url: '${{ secrets.DOKKU_URL}}/tenantapi-stage'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          deploy_docker_image: ghcr.io/${{ github.repository }}/tenantapi:${{ github.sha }}

  deploy_frontend:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Push landlord-frontend to dokku
        uses: dokku/github-action@master
        with:
          git_remote_url: '${{ secrets.DOKKU_URL}}/landlord-stage'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          deploy_docker_image: ghcr.io/${{ github.repository }}/landlord-frontend:${{ github.sha }}

      - name: Push tenant-frontend to dokku
        uses: dokku/github-action@master
        with:
          git_remote_url: '${{ secrets.DOKKU_URL}}/tenant-stage'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          deploy_docker_image: ghcr.io/${{ github.repository }}/tenant-frontend:${{ github.sha }}

  test:
    runs-on: ubuntu-latest
    needs:
      [
        deploy_backend,
        deploy_frontend,
      ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run tests
        env:
          GATEWAY_URL: ${{ secrets.GATEWAY_URL }}
          LANDLORD_APP_URL: ${{ secrets.LANDLORD_APP_URL }}
        run: |
          yarn
          yarn run e2e:ci
